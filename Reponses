TP2-Elhorche-Chadi
TP-GIT

1. git init
   git status

2. echo "# TP2 : Gestion des branches" > README.md
   git add README.md
   git commit -m "Ajout du fichier README.md avec le titre initial"
   git branch -m develop

3. git switch develop
   git switch -c feature1
   echo "Ceci est une description du projet" >> README.md
   git add README.md
   git commit -m "Ajout d'une description du projet dans README.md"

4. git switch develop
   sed -i '2i\Modification sur develop avant merge de f1.' README.md
   git add README.md
   git commit -m "Ajout d’une phrase avant le merge de feature1"
   git merge feature1
   git add README.md
   git commit -m "Fusion de feature1 dans develop"

5. git switch -c feature2
   sed -i '1s/.*/# TP2 - ElhorcheChadi - Gestion des branches/' README.md
   git add README.md
   git commit -m "Modification du titre dans README.md pour feature2"

6. git switch develop
   git switch -c feature3
   sed -i '1s/.*/TP2 - Gestion des branches et fusions/' README.md
   git add README.md
   git commit -m "Modification du titre dans README.md pour feature3"

7. git switch develop
   git merge feature2
   git merge feature3

8. git add README.md
   git commit

Rebase

1. git switch -c feature4
   echo "Cette phrase concerne la partie rebase du TP2." >> README.md
   sed -i 's/Ceci est une description.*/Ceci est une description du projet dans le fichier README.md/' README.md
   git add README.md
   git commit -m "Ajout dans README.md - partie rebase"

2. sed -i '$s/$/ (feature4)/' README.md
   git add README.md
   git commit -m "Ajout dans README.md - mention feature4"

3. echo "Fin des modifications de la feature f4" >> README.md
   git add README.md
   git commit -m "Ajout dans README.md - dernière ligne feature4"

4. git log --oneline
   git rebase -i HEAD~2

5. git switch develop
   sed -i '1s/.*/ TP2 - Branches, merge et rebase - ElhorcheChadi/' README.md
   git add README.md
   git commit -m "Mise à jour du titre README.md pour develop"

6. git rebase feature4
   git add README.md
   git rebase --continue

7. La commande git merge permet de fusionner les modifications de deux branches tout en gardant l’historique des deux.

8. La commande git rebase permet de déplacer les commits d’une branche pour les appliquer sur une autre, en changeant l'ordre des commits. Elle est utile ici pour rendre l’historique plus linéaire et plus clair.

9. git push -f origin develop
